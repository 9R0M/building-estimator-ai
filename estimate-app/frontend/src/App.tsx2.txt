import { useState } from 'react';
import axios from 'axios';
import styles from './App.module.css';

type LineItem = {
  description: string;
  quantity: number;
  unitPrice: number;
};

type EstimateState =
  | { status: 'idle' }
  | { status: 'loading' }
  | { status: 'success'; estimate: number }
  | { status: 'error'; message: string };

export default function App() {
  const [structure, setStructure] = useState("RC");
  const [floors, setFloors] = useState(5);
  const [area, setArea] = useState(1000);
  const [usage, setUsage] = useState("オフィス");
  const [items, setItems] = useState<LineItem[]>([
    { description: '', quantity: 1, unitPrice: 0 }
  ]);
  const [estimateState, setEstimateState] = useState<EstimateState>({ status: 'idle' });

  const handleItemChange = (index: number, field: keyof LineItem, value: string | number) => {
    const newItems = [...items];
    newItems[index][field] = typeof value === 'string' && field !== 'description' ? Number(value) : value;
    setItems(newItems);
  };

  const handleAddItem = () => {
    setItems([...items, { description: '', quantity: 1, unitPrice: 0 }]);
  };

  const handleRemoveItem = (index: number) => {
    const newItems = items.filter((_, i) => i !== index);
    setItems(newItems);
  };

  const getTotal = () =>
    items.reduce((sum, item) => sum + item.quantity * item.unitPrice, 0);

  const handleEstimate = async () => {
    setEstimateState({ status: 'loading' });
    try {
      const res = await axios.post("http://localhost:8000/estimate", {
        structure, floors, area, usage, items
      });
      setEstimateState({ status: 'success', estimate: res.data.estimate });
    } catch {
      setEstimateState({ status: 'error', message: '見積もりに失敗しました。' });
    }
  };

 
