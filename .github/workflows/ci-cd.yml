name: CI/CD Pipeline
on:
 push:
   branches: [main]
jobs:
 build-and-push:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout repository
       uses: actions/checkout@v3
     - name: Set up QEMU
       uses: docker/setup-qemu-action@v3
     - name: Set up Docker Buildx
       uses: docker/setup-buildx-action@v3
     - name: Login to DockerHub
       uses: docker/login-action@v3
       with:
         registry: docker.io
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
     - name: Build & Push Docker Image (Multi-Arch)
       uses: docker/build-push-action@v6
       with:
         context: ./estimate-app/backend
         file: ./estimate-app/backend/Dockerfile
         push: true
         platforms: linux/amd64,linux/arm64
         tags: |
           qurom/building-estimator-ai:latest
           qurom/building-estimator-ai:${{ github.sha }}
         cache-from: type=gha
         cache-to: type=gha,mode=max
     - name: Set IMAGE env
       run: echo "IMAGE=qurom/building-estimator-ai:${{ github.sha }}" >> $GITHUB_ENV
 deploy:
   needs: build-and-push
   runs-on: ubuntu-latest
   steps:
     - name: Checkout repository
       uses: actions/checkout@v3
     - name: Set up SSH key
       run: |
         mkdir -p ~/.ssh
         echo "${{ secrets.VPS_KEY_BASE64 }}" | base64 -d > ~/.ssh/id_ed25519
         chmod 600 ~/.ssh/id_ed25519
         ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
         node-version: '18'
     - name: Install dependencies and build frontend
       run: |
         cd estimate-app/frontend
         npm ci
         npm run build
     - name: Upload dist/ to VPS via SCP
       uses: appleboy/scp-action@v0.1.3
       with:
         host: ${{ secrets.VPS_HOST }}
         username: ${{ secrets.VPS_USER }}
         key: ${{ secrets.VPS_KEY_BASE64 }} # 実際には使われないが、必須入力のためdummy的に
         source: "estimate-app/frontend/dist/*"
         target: "/home/${{ secrets.VPS_USER }}/frontend-dist"
     - name: SSH into VPS and deploy
       run: |
         ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
           cd /home/${{ secrets.VPS_USER }}/building-estimator-ai
           git pull origin main
           docker compose down
           docker compose pull
           docker compose up -d
         EOF