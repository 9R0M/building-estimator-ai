name: CI/CD Pipeline

on:
    push:
        branches: [ main ]

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                platform: [linux/amd64, linux/arm64]
        steps:
            - uses: actions/checkout@v3

            - name: "Set up QEMU"
              uses: docker/setup-qemu-action@v3

            - name: "Set up Docker Buildx"
              uses: docker/setup-buildx-action@v3

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                registry: docker.io
                username: ${{secrets.DOCKERHUB_USERNAME}}
                password: ${{secrets.DOCKERHUB_TOKEN}}

            - name: Build & Push Image
              uses: docker/build-push-action@v6
              with:
                context: .
                file: Dockerfile
                platforms: ${{ matrix.platform }}
                push: true
                tags: your-repo/your-app:${{ github.sha }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

            - name: Set IMAGE env
              run: echo "IMAGE=your-repo/your-app:${{ github.sha }}" >> $GITHUB_ENV

    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - name: Deploy via SSH
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.SERVER_IP }}
                username: ${{ secrets.SERVER_USER }}
                key: ${{ secrets.SSH_PRIVATE_KEY }}
                script: |
                  docker pull $IMAGE
                  docker stop your-app || true
                  docker rm your-app || true
                  docker run -d --name your-app \
                    -e PROMETHEUS_MULTIPROC_DIR=/app/metrics \
                    -v metrics:/app/metrics \
                    -p 8000:8000 $IMAGE
